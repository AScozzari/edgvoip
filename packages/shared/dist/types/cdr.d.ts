import { z } from 'zod';
export declare const CDRSchema: z.ZodObject<{
    id: z.ZodString;
    tenant_id: z.ZodString;
    store_id: z.ZodOptional<z.ZodString>;
    extension_id: z.ZodOptional<z.ZodString>;
    trunk_id: z.ZodOptional<z.ZodString>;
    call_uuid: z.ZodString;
    call_direction: z.ZodEnum<["inbound", "outbound", "internal"]>;
    call_type: z.ZodEnum<["voice", "video", "fax"]>;
    caller_id_number: z.ZodOptional<z.ZodString>;
    caller_id_name: z.ZodOptional<z.ZodString>;
    caller_extension: z.ZodOptional<z.ZodString>;
    callee_id_number: z.ZodOptional<z.ZodString>;
    callee_id_name: z.ZodOptional<z.ZodString>;
    callee_extension: z.ZodOptional<z.ZodString>;
    start_time: z.ZodDate;
    answer_time: z.ZodOptional<z.ZodDate>;
    end_time: z.ZodDate;
    duration: z.ZodNumber;
    bill_seconds: z.ZodNumber;
    hangup_cause: z.ZodString;
    hangup_disposition: z.ZodEnum<["answered", "busy", "no_answer", "congestion", "fail", "timeout"]>;
    audio_codec: z.ZodOptional<z.ZodString>;
    video_codec: z.ZodOptional<z.ZodString>;
    rtp_audio_in_mos: z.ZodOptional<z.ZodNumber>;
    rtp_audio_out_mos: z.ZodOptional<z.ZodNumber>;
    recording_enabled: z.ZodDefault<z.ZodBoolean>;
    recording_path: z.ZodOptional<z.ZodString>;
    recording_duration: z.ZodOptional<z.ZodNumber>;
    recording_consent: z.ZodOptional<z.ZodBoolean>;
    local_ip: z.ZodOptional<z.ZodString>;
    remote_ip: z.ZodOptional<z.ZodString>;
    local_port: z.ZodOptional<z.ZodNumber>;
    remote_port: z.ZodOptional<z.ZodNumber>;
    fs_uuid: z.ZodString;
    fs_domain: z.ZodString;
    fs_context: z.ZodOptional<z.ZodString>;
    fs_profile: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    created_at: z.ZodDate;
    updated_at: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: Date;
    updated_at: Date;
    recording_enabled: boolean;
    tenant_id: string;
    call_uuid: string;
    call_direction: "inbound" | "outbound" | "internal";
    call_type: "voice" | "video" | "fax";
    start_time: Date;
    end_time: Date;
    duration: number;
    bill_seconds: number;
    hangup_cause: string;
    hangup_disposition: "answered" | "busy" | "no_answer" | "congestion" | "fail" | "timeout";
    fs_uuid: string;
    fs_domain: string;
    tags: string[];
    store_id?: string | undefined;
    extension_id?: string | undefined;
    trunk_id?: string | undefined;
    caller_id_number?: string | undefined;
    caller_id_name?: string | undefined;
    caller_extension?: string | undefined;
    callee_id_number?: string | undefined;
    callee_id_name?: string | undefined;
    callee_extension?: string | undefined;
    answer_time?: Date | undefined;
    audio_codec?: string | undefined;
    video_codec?: string | undefined;
    rtp_audio_in_mos?: number | undefined;
    rtp_audio_out_mos?: number | undefined;
    recording_path?: string | undefined;
    recording_duration?: number | undefined;
    recording_consent?: boolean | undefined;
    local_ip?: string | undefined;
    remote_ip?: string | undefined;
    local_port?: number | undefined;
    remote_port?: number | undefined;
    fs_context?: string | undefined;
    fs_profile?: string | undefined;
    metadata?: Record<string, string> | undefined;
}, {
    id: string;
    created_at: Date;
    updated_at: Date;
    tenant_id: string;
    call_uuid: string;
    call_direction: "inbound" | "outbound" | "internal";
    call_type: "voice" | "video" | "fax";
    start_time: Date;
    end_time: Date;
    duration: number;
    bill_seconds: number;
    hangup_cause: string;
    hangup_disposition: "answered" | "busy" | "no_answer" | "congestion" | "fail" | "timeout";
    fs_uuid: string;
    fs_domain: string;
    recording_enabled?: boolean | undefined;
    store_id?: string | undefined;
    extension_id?: string | undefined;
    trunk_id?: string | undefined;
    caller_id_number?: string | undefined;
    caller_id_name?: string | undefined;
    caller_extension?: string | undefined;
    callee_id_number?: string | undefined;
    callee_id_name?: string | undefined;
    callee_extension?: string | undefined;
    answer_time?: Date | undefined;
    audio_codec?: string | undefined;
    video_codec?: string | undefined;
    rtp_audio_in_mos?: number | undefined;
    rtp_audio_out_mos?: number | undefined;
    recording_path?: string | undefined;
    recording_duration?: number | undefined;
    recording_consent?: boolean | undefined;
    local_ip?: string | undefined;
    remote_ip?: string | undefined;
    local_port?: number | undefined;
    remote_port?: number | undefined;
    fs_context?: string | undefined;
    fs_profile?: string | undefined;
    metadata?: Record<string, string> | undefined;
    tags?: string[] | undefined;
}>;
export type CDR = z.infer<typeof CDRSchema>;
export declare const CDRFilterSchema: z.ZodObject<{
    tenant_id: z.ZodOptional<z.ZodString>;
    store_id: z.ZodOptional<z.ZodString>;
    extension_id: z.ZodOptional<z.ZodString>;
    trunk_id: z.ZodOptional<z.ZodString>;
    start_date: z.ZodOptional<z.ZodDate>;
    end_date: z.ZodOptional<z.ZodDate>;
    call_direction: z.ZodOptional<z.ZodEnum<["inbound", "outbound", "internal"]>>;
    call_type: z.ZodOptional<z.ZodEnum<["voice", "video", "fax"]>>;
    hangup_disposition: z.ZodOptional<z.ZodEnum<["answered", "busy", "no_answer", "congestion", "fail", "timeout"]>>;
    caller_number: z.ZodOptional<z.ZodString>;
    callee_number: z.ZodOptional<z.ZodString>;
    min_duration: z.ZodOptional<z.ZodNumber>;
    max_duration: z.ZodOptional<z.ZodNumber>;
    recording_enabled: z.ZodOptional<z.ZodBoolean>;
    recording_consent: z.ZodOptional<z.ZodBoolean>;
    min_mos: z.ZodOptional<z.ZodNumber>;
    page: z.ZodDefault<z.ZodNumber>;
    limit: z.ZodDefault<z.ZodNumber>;
    sort_by: z.ZodDefault<z.ZodEnum<["start_time", "duration", "caller_number", "callee_number"]>>;
    sort_order: z.ZodDefault<z.ZodEnum<["asc", "desc"]>>;
}, "strip", z.ZodTypeAny, {
    page: number;
    limit: number;
    sort_by: "start_time" | "duration" | "caller_number" | "callee_number";
    sort_order: "asc" | "desc";
    recording_enabled?: boolean | undefined;
    tenant_id?: string | undefined;
    store_id?: string | undefined;
    extension_id?: string | undefined;
    trunk_id?: string | undefined;
    call_direction?: "inbound" | "outbound" | "internal" | undefined;
    call_type?: "voice" | "video" | "fax" | undefined;
    hangup_disposition?: "answered" | "busy" | "no_answer" | "congestion" | "fail" | "timeout" | undefined;
    recording_consent?: boolean | undefined;
    start_date?: Date | undefined;
    end_date?: Date | undefined;
    caller_number?: string | undefined;
    callee_number?: string | undefined;
    min_duration?: number | undefined;
    max_duration?: number | undefined;
    min_mos?: number | undefined;
}, {
    recording_enabled?: boolean | undefined;
    tenant_id?: string | undefined;
    store_id?: string | undefined;
    extension_id?: string | undefined;
    trunk_id?: string | undefined;
    call_direction?: "inbound" | "outbound" | "internal" | undefined;
    call_type?: "voice" | "video" | "fax" | undefined;
    hangup_disposition?: "answered" | "busy" | "no_answer" | "congestion" | "fail" | "timeout" | undefined;
    recording_consent?: boolean | undefined;
    start_date?: Date | undefined;
    end_date?: Date | undefined;
    caller_number?: string | undefined;
    callee_number?: string | undefined;
    min_duration?: number | undefined;
    max_duration?: number | undefined;
    min_mos?: number | undefined;
    page?: number | undefined;
    limit?: number | undefined;
    sort_by?: "start_time" | "duration" | "caller_number" | "callee_number" | undefined;
    sort_order?: "asc" | "desc" | undefined;
}>;
export type CDRFilter = z.infer<typeof CDRFilterSchema>;
export declare const CDRStatsSchema: z.ZodObject<{
    total_calls: z.ZodNumber;
    answered_calls: z.ZodNumber;
    missed_calls: z.ZodNumber;
    total_duration: z.ZodNumber;
    average_duration: z.ZodNumber;
    total_cost: z.ZodOptional<z.ZodNumber>;
    inbound_calls: z.ZodNumber;
    outbound_calls: z.ZodNumber;
    internal_calls: z.ZodNumber;
    disposition_stats: z.ZodRecord<z.ZodString, z.ZodNumber>;
    average_mos: z.ZodOptional<z.ZodNumber>;
    period_start: z.ZodDate;
    period_end: z.ZodDate;
    tenant_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    tenant_id: string;
    total_calls: number;
    answered_calls: number;
    missed_calls: number;
    total_duration: number;
    average_duration: number;
    inbound_calls: number;
    outbound_calls: number;
    internal_calls: number;
    disposition_stats: Record<string, number>;
    period_start: Date;
    period_end: Date;
    total_cost?: number | undefined;
    average_mos?: number | undefined;
}, {
    tenant_id: string;
    total_calls: number;
    answered_calls: number;
    missed_calls: number;
    total_duration: number;
    average_duration: number;
    inbound_calls: number;
    outbound_calls: number;
    internal_calls: number;
    disposition_stats: Record<string, number>;
    period_start: Date;
    period_end: Date;
    total_cost?: number | undefined;
    average_mos?: number | undefined;
}>;
export type CDRStats = z.infer<typeof CDRStatsSchema>;
//# sourceMappingURL=cdr.d.ts.map